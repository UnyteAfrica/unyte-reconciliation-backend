name: Run tests with Codecov

on:
  pull_request:
    branches:
       - dev

permissions:
  packages: write
  contents: read

env:
  FORCE_COLOR: 3
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v2
            
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install Setuptools
        run: pip install --upgrade setuptools
      
      - name: Run test
        env:
          DATABASE_HOST_TEST: localhost
          DATABASE_USERNAME_TEST: django_user
          DATABASE_PASSWORD_TEST: testing321
          DATABASE_NAME_TEST: test_db
          DATABASE_PORT_TEST: 5432
        run: python manage.py test

      - name: Generate coverage report
        run: |
              pip install coverage
              pip install pytest-cov
              coverage report -m 
              coverage xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./
          fail_ci_if_error: true
          flags: unittests
          name: codecov-superpoool-v3
          token: ${{ env.CODECOV_TOKEN }}
          verbose: true